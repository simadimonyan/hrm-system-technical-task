
services:

  gateway-service:
    container_name: gateway-service
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - hrm-network
    depends_on:
      - discovery-service
      - company-service
      - employee-service

  company-service:
    container_name: company-service
    build:
      context: ./company-service
      dockerfile: Dockerfile
    ports:
      - 8082:8080
    networks:
      - hrm-network
    depends_on:
      - company-db
      - discovery-service

  employee-service:
    container_name: employee-service
    build:
      context: ./employee-service
      dockerfile: Dockerfile
    ports:
      - 8081:8080
    networks:
      - hrm-network
    depends_on:
      - employee-db
      - discovery-service

  config-service:
    container_name: config-service
    build:
      context: ./config-service
      dockerfile: Dockerfile
    ports:
      - 8083:8080
    networks:
      - hrm-network

  discovery-service:
    container_name: discovery-service
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    ports:
      - 8084:8761
    networks:
      - hrm-network
    depends_on:
      - config-service

  kafka:
    image: apache/kafka-native:latest
    container_name: kafka-broker
    ports:
      - "9092:9092" 
      - "9093:9093"
    volumes:
      - ./volumes/kafka:/var/lib/kafka/data
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker, controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092, CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092, CONTROLLER://kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, CONTROLLER:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - hrm-network

  kafka-ui:
    image: kafbat/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - 8000:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092  
    depends_on:
      - kafka
    networks:
      - hrm-network

  company-db:
    container_name: company-db
    image: postgres:latest
    restart: always
    user: postgres
    volumes:
      - ./volumes/company-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${COMPANY_POSTGRES_DB}
      - POSTGRES_USER=${COMPANY_POSTGRES_USER}
      - POSTGRES_PASSWORD=${COMPANY_POSTGRES_PASSWORD}
    expose:
      - 5433
    ports:
      - 5433:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hrm-network

  employee-db:
    container_name: employee-db
    image: postgres:latest
    restart: always
    user: postgres
    volumes:
      - ./volumes/employee-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${EMPLOYEE_POSTGRES_DB}
      - POSTGRES_USER=${EMPLOYEE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${EMPLOYEE_POSTGRES_PASSWORD}
    expose:
      - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hrm-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    restart: always
    volumes:
      - ./volumes/pgadmin-data:/var/lib/pgadmin
    networks:
      - hrm-network
      
networks:
  hrm-network:
    driver: bridge